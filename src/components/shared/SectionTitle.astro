---
interface Props {
  title: string;
  subtitle?: string;
  className?: string;
}

const { 
  title, 
  subtitle, 
  className = ""
} = Astro.props;
---

<div class:list={["text-center", className]} data-animate>
  <h2 class="my-20 text-4xl font-light tracking-tight text-white">
    {title}
  </h2>
  {subtitle && (
    <p class="mt-4 text-lg text-neutral-400">
      {subtitle}
    </p>
  )}
</div>

<style>
  [data-animate] {
    opacity: 0;
    transform: translateY(-20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  [data-animate].animate-in {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.2 }
  );

  document.querySelectorAll('[data-animate]').forEach((element) => {
    observer.observe(element);
  });
</script>